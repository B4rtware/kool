apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'

// fixme: not sure how to setup android platform...
//apply plugin: 'com.android.library'
//android {
//    compileSdkVersion 28
//    defaultConfig {
//        minSdkVersion 18
//        targetSdkVersion 28
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//
//    lintOptions {
//        // fft library references java.awt via dependencies...
//        abortOnError = false
//    }
//}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js')
//        fromPreset(presets.jvm, 'android')

        js {
            compilations.main {
                tasks[compileKotlinTaskName].kotlinOptions {
                    outputFile = "${buildDir}/web/kool.js"
                    moduleKind = "amd"
                    sourceMap = false
                }
            }
        }
    }

    sourceSets {
        // Common
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        
        // JVM platform
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation 'org.jetbrains.kotlin:kotlin-reflect'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

                // lwjgl libraries
                implementation "org.lwjgl:lwjgl:${lwjglVersion}"
                implementation "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
                implementation "org.lwjgl:lwjgl-assimp:${lwjglVersion}"
                implementation "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}"
                implementation "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
                
                // only needed for fft audio stuff
                implementation 'com.github.wendykierp:JTransforms:3.1'

            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        // Javascript platform
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$coroutines_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
            }
        }

        // Android platform
//        androidMain {
//            dependencies {
//                api 'org.jetbrains.kotlin:kotlin-stdlib-common'
//                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
//
//                // only needed for fft audio stuff
//                implementation 'com.github.wendykierp:JTransforms:3.1'
//            }
//        }
    }
}

build.doLast {
    copy {
        includeEmptyDirs = false
        from "${buildDir}/web"
        into "${projectDir}/$webPath"
        include { fileTreeElement ->
            fileTreeElement.path.endsWith(".js")
        }
    }
}

//if (publishingAvailable) {
//    apply from: "../publishing.gradle"
//}
